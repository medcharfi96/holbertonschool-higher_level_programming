import matrix_divided from 2-matrix_divided.py

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

test div zero:
>>> matrix_divided([[1, 2, 3], [1, 2, 3]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

test div char:
>>> matrix_divided([[1, 2, 3], [1, 2, 3]], "zaz")
Traceback (most recent call last):
TypeError: div must be a number

pas mm taille:
>>> matrix_divided([[1, 2, 3], [1, 2, 3, 4]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

char non int:
>>> matrix_divided('a', 2)
Traceback (most recent call last):
TypeError

un element non int:
>>> matrix_divided([[1, 2, 3], [1, 2, 'g']], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of list of integers/float)

testvrai:
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

testvrai2:
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0.5)
[[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]